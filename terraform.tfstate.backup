{
  "version": 4,
  "terraform_version": "1.0.3",
  "serial": 5,
  "lineage": "7bfe1435-2420-10bc-f12b-93eed7bd558e",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "kubectl_path_documents",
      "name": "manifests-account",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_template": false,
            "documents": [
              "#Copyright 2019 Google LLC\n\n#Licensed under the Apache License, Version 2.0 (the \"License\");\n#you may not use this file except in compliance with the License.\n#You may obtain a copy of the License at\n\n#https://www.apache.org/licenses/LICENSE-2.0\n\n#Unless required by applicable law or agreed to in writing, software\n#distributed under the License is distributed on an \"AS IS\" BASIS,\n#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#See the License for the specific language governing permissions and\n#limitations under the License.\n\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prometheus-server-conf\n  labels:\n    name: prometheus-server-conf\n  namespace: prometheus\ndata:\n  prometheus.rules: |-\n    groups:\n    - name: devopscube demo alert\n      rules:\n      - alert: High Pod Memory\n        expr: sum(container_memory_usage_bytes) \u003e 1\n        for: 1m\n        labels:\n          severity: slack\n        annotations:\n          summary: High Memory Usage\n  prometheus.yml: |-\n    global:\n      scrape_interval: 60s\n      evaluation_interval: 5s\n    rule_files:\n      - /etc/prometheus/prometheus.rules\n    alerting:\n      alertmanagers:\n      - scheme: http\n        static_configs:\n        - targets:\n          - \"alertmanager.prometheus.svc:9093\"\n\n    scrape_configs:\n    \n      - job_name: 'kubernetes-apiservers'\n\n        kubernetes_sd_configs:\n        - role: endpoints\n        scheme: https\n\n        tls_config:\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        relabel_configs:\n        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n          action: keep\n          regex: default;kubernetes;https\n\n      - job_name: 'kubernetes-nodes'\n\n        scheme: https\n\n        tls_config:\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        kubernetes_sd_configs:\n        - role: node\n\n        relabel_configs:\n        - action: labelmap\n          regex: __meta_kubernetes_node_label_(.+)\n        - target_label: __address__\n          replacement: kubernetes.default.svc:443\n        - source_labels: [__meta_kubernetes_node_name]\n          regex: (.+)\n          target_label: __metrics_path__\n          replacement: /api/v1/nodes/1/proxy/metrics\n\n      \n      - job_name: 'kubernetes-pods'\n\n        kubernetes_sd_configs:\n        - role: pod\n\n        relabel_configs:\n        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n          action: keep\n          regex: true\n        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n          action: replace\n          target_label: __metrics_path__\n          regex: (.+)\n        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n          action: replace\n          regex: ([^:]+)(?::\\d+)?;(\\d+)\n          replacement: $1:$2\n          target_label: __address__\n        - action: labelmap\n          regex: __meta_kubernetes_pod_label_(.+)\n        - source_labels: [__meta_kubernetes_namespace]\n          action: replace\n          target_label: kubernetes_namespace\n        - source_labels: [__meta_kubernetes_pod_name]\n          action: replace\n          target_label: kubernetes_pod_name\n\n      - job_name: 'kubernetes-cadvisor'\n\n        scheme: https\n\n        tls_config:\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        kubernetes_sd_configs:\n        - role: node\n\n        relabel_configs:\n        - action: labelmap\n          regex: __meta_kubernetes_node_label_(.+)\n        - target_label: __address__\n          replacement: kubernetes.default.svc:443\n        - source_labels: [__meta_kubernetes_node_name]\n          regex: (.+)\n          target_label: __metrics_path__\n          replacement: /api/v1/nodes/1/proxy/metrics/cadvisor\n      \n      - job_name: 'kubernetes-service-endpoints'\n\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        relabel_configs:\n        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n          action: keep\n          regex: true\n        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n          action: replace\n          target_label: __scheme__\n          regex: (https?)\n        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n          action: replace\n          target_label: __metrics_path__\n          regex: (.+)\n        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n          action: replace\n          target_label: __address__\n          regex: ([^:]+)(?::\\d+)?;(\\d+)\n          replacement: $1:$2\n        - action: labelmap\n          regex: __meta_kubernetes_service_label_(.+)\n        - source_labels: [__meta_kubernetes_namespace]\n          action: replace\n          target_label: kubernetes_namespace\n        - source_labels: [__meta_kubernetes_service_name]\n          action: replace\n          target_label: kubernetes_name",
              "#Copyright 2019 Google LLC\n\n#Licensed under the Apache License, Version 2.0 (the \"License\");\n#you may not use this file except in compliance with the License.\n#You may obtain a copy of the License at\n\n#https://www.apache.org/licenses/LICENSE-2.0\n\n#Unless required by applicable law or agreed to in writing, software\n#distributed under the License is distributed on an \"AS IS\" BASIS,\n#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#See the License for the specific language governing permissions and\n#limitations under the License.\n\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRole\nmetadata:\n  name: prometheus\nrules:\n- apiGroups: [\"\"]\n  resources:\n  - nodes\n  - nodes/proxy\n  - services\n  - endpoints\n  - pods\n  verbs: [\"get\", \"list\", \"watch\"]\n- apiGroups:\n  - extensions\n  resources:\n  - ingresses\n  verbs: [\"get\", \"list\", \"watch\"]\n- nonResourceURLs: [\"/metrics\"]\n  verbs: [\"get\"]",
              "apiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: prometheus\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus\nsubjects:\n- kind: ServiceAccount\n  name: default\n  namespace: prometheus"
            ],
            "id": "79a4d75aba08acc1d29d6bee0c37c063b561341c0205c02479e95d63dcca0e16",
            "pattern": "./manifests/1-*.yaml",
            "sensitive_vars": null,
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "kubectl_path_documents",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_template": false,
            "documents": [
              "#Copyright 2019 Google LLC\n\n#Licensed under the Apache License, Version 2.0 (the \"License\");\n#you may not use this file except in compliance with the License.\n#You may obtain a copy of the License at\n\n#https://www.apache.org/licenses/LICENSE-2.0\n\n#Unless required by applicable law or agreed to in writing, software\n#distributed under the License is distributed on an \"AS IS\" BASIS,\n#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#See the License for the specific language governing permissions and\n#limitations under the License.\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: prometheus-deployment\n  namespace: prometheus\n  labels:\n    app: prometheus-server\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: prometheus-server\n  template:\n    metadata:\n      labels:\n        app: prometheus-server\n    spec:\n      containers:\n        - name: prometheus\n          image: prom/prometheus:v2.19.3\n          args:\n            - \"--config.file=/etc/prometheus/prometheus.yml\"\n            - \"--storage.tsdb.path=/prometheus/\"\n          ports:\n            - containerPort: 9090\n          volumeMounts:\n            - name: prometheus-config-volume\n              mountPath: /etc/prometheus/\n            - name: prometheus-storage-volume\n              mountPath: /prometheus/\n        - name: sidecar\n          image: gcr.io/stackdriver-prometheus/stackdriver-prometheus-sidecar:0.8.2\n          imagePullPolicy: Always\n          args:\n            - --stackdriver.project-id=terraform-cluster-prometheus\n            - --prometheus.wal-directory=/prometheus/wal\n            - --stackdriver.kubernetes.location=us-west2-a\n            - --stackdriver.kubernetes.cluster-name=gke\n            #- \\\"--stackdriver.generic.location=us-west2-a\\\"\n            #- \\\"--stackdriver.generic.namespace=gke\\\"\n          ports:\n            - name: sidecar\n              containerPort: 9091\n          volumeMounts:\n            - name: prometheus-storage-volume\n              mountPath: /prometheus\n      volumes:\n        - name: prometheus-config-volume\n          configMap:\n            defaultMode: 420\n            name: prometheus-server-conf\n        - name: prometheus-storage-volume\n          emptyDir: {}"
            ],
            "id": "7ffd47807096a45af1fefc98395222ad51402ba59160464e966a05f20f69031d",
            "pattern": "./manifests/2-gke-prometheus-deployment.yaml",
            "sensitive_vars": null,
            "vars": {
              "DATA_DIR": "/prometheus",
              "DATA_VOLUME": "prometheus-storage-volume",
              "GCP_LOCATION": "us-west2-a",
              "GCP_PROJECT": "terraform-cluster-prometheus",
              "KUBE_CLUSTER": "gke",
              "KUBE_NAMESPACE": "prometheus",
              "PROMETHEUS_VER_TAG": "v2.19.3",
              "SIDECAR_IMAGE_TAG": "0.8.2"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_version": "apps/v1",
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/prometheus/deployments/prometheus-deployment",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "apiVersion=apps/v1,kind=Deployment,metadata.labels.app=prometheus-server,metadata.name=prometheus-deployment,metadata.namespace=prometheus,spec.replicas=1,spec.selector.matchLabels.app=prometheus-server,spec.template.metadata.labels.app=prometheus-server,spec.template.spec.containers.#=2,spec.template.spec.containers.0.args.#=2,spec.template.spec.containers.0.args.0=--config.file=/etc/prometheus/prometheus.yml,spec.template.spec.containers.0.args.1=--storage.tsdb.path=/prometheus/,spec.template.spec.containers.0.image=prom/prometheus:v2.19.3,spec.template.spec.containers.0.name=prometheus,spec.template.spec.containers.0.ports.#=1,spec.template.spec.containers.0.ports.0.containerPort=9090,spec.template.spec.containers.0.volumeMounts.#=2,spec.template.spec.containers.0.volumeMounts.0.mountPath=/etc/prometheus/,spec.template.spec.containers.0.volumeMounts.0.name=prometheus-config-volume,spec.template.spec.containers.0.volumeMounts.1.mountPath=/prometheus/,spec.template.spec.containers.0.volumeMounts.1.name=prometheus-storage-volume,spec.template.spec.containers.1.args.#=4,spec.template.spec.containers.1.args.0=--stackdriver.project-id=terraform-cluster-prometheus,spec.template.spec.containers.1.args.1=--prometheus.wal-directory=/prometheus/wal,spec.template.spec.containers.1.args.2=--stackdriver.kubernetes.location=us-west2-a,spec.template.spec.containers.1.args.3=--stackdriver.kubernetes.cluster-name=gke,spec.template.spec.containers.1.image=gcr.io/stackdriver-prometheus/stackdriver-prometheus-sidecar:0.8.2,spec.template.spec.containers.1.imagePullPolicy=Always,spec.template.spec.containers.1.name=sidecar,spec.template.spec.containers.1.ports.#=1,spec.template.spec.containers.1.ports.0.containerPort=9091,spec.template.spec.containers.1.ports.0.name=sidecar,spec.template.spec.containers.1.volumeMounts.#=1,spec.template.spec.containers.1.volumeMounts.0.mountPath=/prometheus,spec.template.spec.containers.1.volumeMounts.0.name=prometheus-storage-volume,spec.template.spec.volumes.#=2,spec.template.spec.volumes.0.configMap.defaultMode=420,spec.template.spec.volumes.0.configMap.name=prometheus-server-conf,spec.template.spec.volumes.0.name=prometheus-config-volume,spec.template.spec.volumes.1.name=prometheus-storage-volume",
            "live_resource_version": "29844",
            "live_uid": "24095201-b6ff-48ce-936f-8f62837fefe8",
            "name": "prometheus-deployment",
            "namespace": "prometheus",
            "override_namespace": null,
            "resource_version": "29787",
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "24095201-b6ff-48ce-936f-8f62837fefe8",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "#Copyright 2019 Google LLC\n\n#Licensed under the Apache License, Version 2.0 (the \"License\");\n#you may not use this file except in compliance with the License.\n#You may obtain a copy of the License at\n\n#https://www.apache.org/licenses/LICENSE-2.0\n\n#Unless required by applicable law or agreed to in writing, software\n#distributed under the License is distributed on an \"AS IS\" BASIS,\n#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#See the License for the specific language governing permissions and\n#limitations under the License.\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: prometheus-deployment\n  namespace: prometheus\n  labels:\n    app: prometheus-server\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: prometheus-server\n  template:\n    metadata:\n      labels:\n        app: prometheus-server\n    spec:\n      containers:\n        - name: prometheus\n          image: prom/prometheus:v2.19.3\n          args:\n            - \"--config.file=/etc/prometheus/prometheus.yml\"\n            - \"--storage.tsdb.path=/prometheus/\"\n          ports:\n            - containerPort: 9090\n          volumeMounts:\n            - name: prometheus-config-volume\n              mountPath: /etc/prometheus/\n            - name: prometheus-storage-volume\n              mountPath: /prometheus/\n        - name: sidecar\n          image: gcr.io/stackdriver-prometheus/stackdriver-prometheus-sidecar:0.8.2\n          imagePullPolicy: Always\n          args:\n            - --stackdriver.project-id=terraform-cluster-prometheus\n            - --prometheus.wal-directory=/prometheus/wal\n            - --stackdriver.kubernetes.location=us-west2-a\n            - --stackdriver.kubernetes.cluster-name=gke\n            #- \\\"--stackdriver.generic.location=us-west2-a\\\"\n            #- \\\"--stackdriver.generic.namespace=gke\\\"\n          ports:\n            - name: sidecar\n              containerPort: 9091\n          volumeMounts:\n            - name: prometheus-storage-volume\n              mountPath: /prometheus\n      volumes:\n        - name: prometheus-config-volume\n          configMap:\n            defaultMode: 420\n            name: prometheus-server-conf\n        - name: prometheus-storage-volume\n          emptyDir: {}",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: prometheus-server\n  name: prometheus-deployment\n  namespace: prometheus\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: prometheus-server\n  template:\n    metadata:\n      labels:\n        app: prometheus-server\n    spec:\n      containers:\n      - args:\n        - --config.file=/etc/prometheus/prometheus.yml\n        - --storage.tsdb.path=/prometheus/\n        image: prom/prometheus:v2.19.3\n        name: prometheus\n        ports:\n        - containerPort: 9090\n        volumeMounts:\n        - mountPath: /etc/prometheus/\n          name: prometheus-config-volume\n        - mountPath: /prometheus/\n          name: prometheus-storage-volume\n      - args:\n        - --stackdriver.project-id=terraform-cluster-prometheus\n        - --prometheus.wal-directory=/prometheus/wal\n        - --stackdriver.kubernetes.location=us-west2-a\n        - --stackdriver.kubernetes.cluster-name=gke\n        image: gcr.io/stackdriver-prometheus/stackdriver-prometheus-sidecar:0.8.2\n        imagePullPolicy: Always\n        name: sidecar\n        ports:\n        - containerPort: 9091\n          name: sidecar\n        volumeMounts:\n        - mountPath: /prometheus\n          name: prometheus-storage-volume\n      volumes:\n      - configMap:\n          defaultMode: 420\n          name: prometheus-server-conf\n        name: prometheus-config-volume\n      - emptyDir: {}\n        name: prometheus-storage-volume\n",
            "yaml_incluster": "apiVersion=apps/v1,kind=Deployment,metadata.labels.app=prometheus-server,metadata.name=prometheus-deployment,metadata.namespace=prometheus,spec.replicas=1,spec.selector.matchLabels.app=prometheus-server,spec.template.metadata.labels.app=prometheus-server,spec.template.spec.containers.#=2,spec.template.spec.containers.0.args.#=2,spec.template.spec.containers.0.args.0=--config.file=/etc/prometheus/prometheus.yml,spec.template.spec.containers.0.args.1=--storage.tsdb.path=/prometheus/,spec.template.spec.containers.0.image=prom/prometheus:v2.19.3,spec.template.spec.containers.0.name=prometheus,spec.template.spec.containers.0.ports.#=1,spec.template.spec.containers.0.ports.0.containerPort=9090,spec.template.spec.containers.0.volumeMounts.#=2,spec.template.spec.containers.0.volumeMounts.0.mountPath=/etc/prometheus/,spec.template.spec.containers.0.volumeMounts.0.name=prometheus-config-volume,spec.template.spec.containers.0.volumeMounts.1.mountPath=/prometheus/,spec.template.spec.containers.0.volumeMounts.1.name=prometheus-storage-volume,spec.template.spec.containers.1.args.#=4,spec.template.spec.containers.1.args.0=--stackdriver.project-id=terraform-cluster-prometheus,spec.template.spec.containers.1.args.1=--prometheus.wal-directory=/prometheus/wal,spec.template.spec.containers.1.args.2=--stackdriver.kubernetes.location=us-west2-a,spec.template.spec.containers.1.args.3=--stackdriver.kubernetes.cluster-name=gke,spec.template.spec.containers.1.image=gcr.io/stackdriver-prometheus/stackdriver-prometheus-sidecar:0.8.2,spec.template.spec.containers.1.imagePullPolicy=Always,spec.template.spec.containers.1.name=sidecar,spec.template.spec.containers.1.ports.#=1,spec.template.spec.containers.1.ports.0.containerPort=9091,spec.template.spec.containers.1.ports.0.name=sidecar,spec.template.spec.containers.1.volumeMounts.#=1,spec.template.spec.containers.1.volumeMounts.0.mountPath=/prometheus,spec.template.spec.containers.1.volumeMounts.0.name=prometheus-storage-volume,spec.template.spec.volumes.#=2,spec.template.spec.volumes.0.configMap.defaultMode=420,spec.template.spec.volumes.0.configMap.name=prometheus-server-conf,spec.template.spec.volumes.0.name=prometheus-config-volume,spec.template.spec.volumes.1.name=prometheus-storage-volume"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.kubectl_path_documents.prometheus"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "test",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "api_version": "v1",
            "force_new": false,
            "id": "/api/v1/namespaces/prometheus/configmaps/prometheus-server-conf",
            "ignore_fields": null,
            "kind": "ConfigMap",
            "live_manifest_incluster": "apiVersion=v1,data.prometheus.rules=groups:\n- name: devopscube demo alert\n  rules:\n  - alert: High Pod Memory\n    expr: sum(container_memory_usage_bytes) \u003e 1\n    for: 1m\n    labels:\n      severity: slack\n    annotations:\n      summary: High Memory Usage,data.prometheus.yml=global:\n  scrape_interval: 60s\n  evaluation_interval: 5s\nrule_files:\n  - /etc/prometheus/prometheus.rules\nalerting:\n  alertmanagers:\n  - scheme: http\n    static_configs:\n    - targets:\n      - \"alertmanager.prometheus.svc:9093\"\n\nscrape_configs:\n\n  - job_name: 'kubernetes-apiservers'\n\n    kubernetes_sd_configs:\n    - role: endpoints\n    scheme: https\n\n    tls_config:\n      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    relabel_configs:\n    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n      action: keep\n      regex: default;kubernetes;https\n\n  - job_name: 'kubernetes-nodes'\n\n    scheme: https\n\n    tls_config:\n      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    kubernetes_sd_configs:\n    - role: node\n\n    relabel_configs:\n    - action: labelmap\n      regex: __meta_kubernetes_node_label_(.+)\n    - target_label: __address__\n      replacement: kubernetes.default.svc:443\n    - source_labels: [__meta_kubernetes_node_name]\n      regex: (.+)\n      target_label: __metrics_path__\n      replacement: /api/v1/nodes/1/proxy/metrics\n\n  \n  - job_name: 'kubernetes-pods'\n\n    kubernetes_sd_configs:\n    - role: pod\n\n    relabel_configs:\n    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n      action: keep\n      regex: true\n    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n      action: replace\n      target_label: __metrics_path__\n      regex: (.+)\n    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n      action: replace\n      regex: ([^:]+)(?::\\d+)?;(\\d+)\n      replacement: $1:$2\n      target_label: __address__\n    - action: labelmap\n      regex: __meta_kubernetes_pod_label_(.+)\n    - source_labels: [__meta_kubernetes_namespace]\n      action: replace\n      target_label: kubernetes_namespace\n    - source_labels: [__meta_kubernetes_pod_name]\n      action: replace\n      target_label: kubernetes_pod_name\n\n  - job_name: 'kubernetes-cadvisor'\n\n    scheme: https\n\n    tls_config:\n      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    kubernetes_sd_configs:\n    - role: node\n\n    relabel_configs:\n    - action: labelmap\n      regex: __meta_kubernetes_node_label_(.+)\n    - target_label: __address__\n      replacement: kubernetes.default.svc:443\n    - source_labels: [__meta_kubernetes_node_name]\n      regex: (.+)\n      target_label: __metrics_path__\n      replacement: /api/v1/nodes/1/proxy/metrics/cadvisor\n  \n  - job_name: 'kubernetes-service-endpoints'\n\n    kubernetes_sd_configs:\n    - role: endpoints\n\n    relabel_configs:\n    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n      action: keep\n      regex: true\n    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n      action: replace\n      target_label: __scheme__\n      regex: (https?)\n    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n      action: replace\n      target_label: __metrics_path__\n      regex: (.+)\n    - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n      action: replace\n      target_label: __address__\n      regex: ([^:]+)(?::\\d+)?;(\\d+)\n      replacement: $1:$2\n    - action: labelmap\n      regex: __meta_kubernetes_service_label_(.+)\n    - source_labels: [__meta_kubernetes_namespace]\n      action: replace\n      target_label: kubernetes_namespace\n    - source_labels: [__meta_kubernetes_service_name]\n      action: replace\n      target_label: kubernetes_name,kind=ConfigMap,metadata.labels.name=prometheus-server-conf,metadata.name=prometheus-server-conf,metadata.namespace=prometheus",
            "live_resource_version": "29776",
            "live_uid": "f513577d-2b0a-4758-906e-8f7391088e53",
            "name": "prometheus-server-conf",
            "namespace": "prometheus",
            "override_namespace": null,
            "resource_version": "29776",
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "f513577d-2b0a-4758-906e-8f7391088e53",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "#Copyright 2019 Google LLC\n\n#Licensed under the Apache License, Version 2.0 (the \"License\");\n#you may not use this file except in compliance with the License.\n#You may obtain a copy of the License at\n\n#https://www.apache.org/licenses/LICENSE-2.0\n\n#Unless required by applicable law or agreed to in writing, software\n#distributed under the License is distributed on an \"AS IS\" BASIS,\n#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#See the License for the specific language governing permissions and\n#limitations under the License.\n\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prometheus-server-conf\n  labels:\n    name: prometheus-server-conf\n  namespace: prometheus\ndata:\n  prometheus.rules: |-\n    groups:\n    - name: devopscube demo alert\n      rules:\n      - alert: High Pod Memory\n        expr: sum(container_memory_usage_bytes) \u003e 1\n        for: 1m\n        labels:\n          severity: slack\n        annotations:\n          summary: High Memory Usage\n  prometheus.yml: |-\n    global:\n      scrape_interval: 60s\n      evaluation_interval: 5s\n    rule_files:\n      - /etc/prometheus/prometheus.rules\n    alerting:\n      alertmanagers:\n      - scheme: http\n        static_configs:\n        - targets:\n          - \"alertmanager.prometheus.svc:9093\"\n\n    scrape_configs:\n    \n      - job_name: 'kubernetes-apiservers'\n\n        kubernetes_sd_configs:\n        - role: endpoints\n        scheme: https\n\n        tls_config:\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        relabel_configs:\n        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n          action: keep\n          regex: default;kubernetes;https\n\n      - job_name: 'kubernetes-nodes'\n\n        scheme: https\n\n        tls_config:\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        kubernetes_sd_configs:\n        - role: node\n\n        relabel_configs:\n        - action: labelmap\n          regex: __meta_kubernetes_node_label_(.+)\n        - target_label: __address__\n          replacement: kubernetes.default.svc:443\n        - source_labels: [__meta_kubernetes_node_name]\n          regex: (.+)\n          target_label: __metrics_path__\n          replacement: /api/v1/nodes/1/proxy/metrics\n\n      \n      - job_name: 'kubernetes-pods'\n\n        kubernetes_sd_configs:\n        - role: pod\n\n        relabel_configs:\n        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n          action: keep\n          regex: true\n        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n          action: replace\n          target_label: __metrics_path__\n          regex: (.+)\n        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n          action: replace\n          regex: ([^:]+)(?::\\d+)?;(\\d+)\n          replacement: $1:$2\n          target_label: __address__\n        - action: labelmap\n          regex: __meta_kubernetes_pod_label_(.+)\n        - source_labels: [__meta_kubernetes_namespace]\n          action: replace\n          target_label: kubernetes_namespace\n        - source_labels: [__meta_kubernetes_pod_name]\n          action: replace\n          target_label: kubernetes_pod_name\n\n      - job_name: 'kubernetes-cadvisor'\n\n        scheme: https\n\n        tls_config:\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        kubernetes_sd_configs:\n        - role: node\n\n        relabel_configs:\n        - action: labelmap\n          regex: __meta_kubernetes_node_label_(.+)\n        - target_label: __address__\n          replacement: kubernetes.default.svc:443\n        - source_labels: [__meta_kubernetes_node_name]\n          regex: (.+)\n          target_label: __metrics_path__\n          replacement: /api/v1/nodes/1/proxy/metrics/cadvisor\n      \n      - job_name: 'kubernetes-service-endpoints'\n\n        kubernetes_sd_configs:\n        - role: endpoints\n\n        relabel_configs:\n        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n          action: keep\n          regex: true\n        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n          action: replace\n          target_label: __scheme__\n          regex: (https?)\n        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n          action: replace\n          target_label: __metrics_path__\n          regex: (.+)\n        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n          action: replace\n          target_label: __address__\n          regex: ([^:]+)(?::\\d+)?;(\\d+)\n          replacement: $1:$2\n        - action: labelmap\n          regex: __meta_kubernetes_service_label_(.+)\n        - source_labels: [__meta_kubernetes_namespace]\n          action: replace\n          target_label: kubernetes_namespace\n        - source_labels: [__meta_kubernetes_service_name]\n          action: replace\n          target_label: kubernetes_name",
            "yaml_body_parsed": "apiVersion: v1\ndata:\n  prometheus.rules: |-\n    groups:\n    - name: devopscube demo alert\n      rules:\n      - alert: High Pod Memory\n        expr: sum(container_memory_usage_bytes) \u003e 1\n        for: 1m\n        labels:\n          severity: slack\n        annotations:\n          summary: High Memory Usage\n  prometheus.yml: \"global:\\n  scrape_interval: 60s\\n  evaluation_interval: 5s\\nrule_files:\\n\n    \\ - /etc/prometheus/prometheus.rules\\nalerting:\\n  alertmanagers:\\n  - scheme:\n    http\\n    static_configs:\\n    - targets:\\n      - \\\"alertmanager.prometheus.svc:9093\\\"\\n\\nscrape_configs:\\n\\n\n    \\ - job_name: 'kubernetes-apiservers'\\n\\n    kubernetes_sd_configs:\\n    - role:\n    endpoints\\n    scheme: https\\n\\n    tls_config:\\n      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\\n\n    \\   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\\n\\n\n    \\   relabel_configs:\\n    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name,\n    __meta_kubernetes_endpoint_port_name]\\n      action: keep\\n      regex: default;kubernetes;https\\n\\n\n    \\ - job_name: 'kubernetes-nodes'\\n\\n    scheme: https\\n\\n    tls_config:\\n      ca_file:\n    /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\\n\\n\n    \\   kubernetes_sd_configs:\\n    - role: node\\n\\n    relabel_configs:\\n    - action:\n    labelmap\\n      regex: __meta_kubernetes_node_label_(.+)\\n    - target_label:\n    __address__\\n      replacement: kubernetes.default.svc:443\\n    - source_labels:\n    [__meta_kubernetes_node_name]\\n      regex: (.+)\\n      target_label: __metrics_path__\\n\n    \\     replacement: /api/v1/nodes/1/proxy/metrics\\n\\n  \\n  - job_name: 'kubernetes-pods'\\n\\n\n    \\   kubernetes_sd_configs:\\n    - role: pod\\n\\n    relabel_configs:\\n    - source_labels:\n    [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\\n      action: keep\\n\n    \\     regex: true\\n    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\\n\n    \\     action: replace\\n      target_label: __metrics_path__\\n      regex: (.+)\\n\n    \\   - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\\n\n    \\     action: replace\\n      regex: ([^:]+)(?::\\\\d+)?;(\\\\d+)\\n      replacement:\n    $1:$2\\n      target_label: __address__\\n    - action: labelmap\\n      regex: __meta_kubernetes_pod_label_(.+)\\n\n    \\   - source_labels: [__meta_kubernetes_namespace]\\n      action: replace\\n      target_label:\n    kubernetes_namespace\\n    - source_labels: [__meta_kubernetes_pod_name]\\n      action:\n    replace\\n      target_label: kubernetes_pod_name\\n\\n  - job_name: 'kubernetes-cadvisor'\\n\\n\n    \\   scheme: https\\n\\n    tls_config:\\n      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\\n\n    \\   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\\n\\n\n    \\   kubernetes_sd_configs:\\n    - role: node\\n\\n    relabel_configs:\\n    - action:\n    labelmap\\n      regex: __meta_kubernetes_node_label_(.+)\\n    - target_label:\n    __address__\\n      replacement: kubernetes.default.svc:443\\n    - source_labels:\n    [__meta_kubernetes_node_name]\\n      regex: (.+)\\n      target_label: __metrics_path__\\n\n    \\     replacement: /api/v1/nodes/1/proxy/metrics/cadvisor\\n  \\n  - job_name: 'kubernetes-service-endpoints'\\n\\n\n    \\   kubernetes_sd_configs:\\n    - role: endpoints\\n\\n    relabel_configs:\\n    -\n    source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\\n      action:\n    keep\\n      regex: true\\n    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\\n\n    \\     action: replace\\n      target_label: __scheme__\\n      regex: (https?)\\n\n    \\   - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\\n\n    \\     action: replace\\n      target_label: __metrics_path__\\n      regex: (.+)\\n\n    \\   - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\\n\n    \\     action: replace\\n      target_label: __address__\\n      regex: ([^:]+)(?::\\\\d+)?;(\\\\d+)\\n\n    \\     replacement: $1:$2\\n    - action: labelmap\\n      regex: __meta_kubernetes_service_label_(.+)\\n\n    \\   - source_labels: [__meta_kubernetes_namespace]\\n      action: replace\\n      target_label:\n    kubernetes_namespace\\n    - source_labels: [__meta_kubernetes_service_name]\\n\n    \\     action: replace\\n      target_label: kubernetes_name\"\nkind: ConfigMap\nmetadata:\n  labels:\n    name: prometheus-server-conf\n  name: prometheus-server-conf\n  namespace: prometheus\n",
            "yaml_incluster": "apiVersion=v1,data.prometheus.rules=groups:\n- name: devopscube demo alert\n  rules:\n  - alert: High Pod Memory\n    expr: sum(container_memory_usage_bytes) \u003e 1\n    for: 1m\n    labels:\n      severity: slack\n    annotations:\n      summary: High Memory Usage,data.prometheus.yml=global:\n  scrape_interval: 60s\n  evaluation_interval: 5s\nrule_files:\n  - /etc/prometheus/prometheus.rules\nalerting:\n  alertmanagers:\n  - scheme: http\n    static_configs:\n    - targets:\n      - \"alertmanager.prometheus.svc:9093\"\n\nscrape_configs:\n\n  - job_name: 'kubernetes-apiservers'\n\n    kubernetes_sd_configs:\n    - role: endpoints\n    scheme: https\n\n    tls_config:\n      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    relabel_configs:\n    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n      action: keep\n      regex: default;kubernetes;https\n\n  - job_name: 'kubernetes-nodes'\n\n    scheme: https\n\n    tls_config:\n      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    kubernetes_sd_configs:\n    - role: node\n\n    relabel_configs:\n    - action: labelmap\n      regex: __meta_kubernetes_node_label_(.+)\n    - target_label: __address__\n      replacement: kubernetes.default.svc:443\n    - source_labels: [__meta_kubernetes_node_name]\n      regex: (.+)\n      target_label: __metrics_path__\n      replacement: /api/v1/nodes/1/proxy/metrics\n\n  \n  - job_name: 'kubernetes-pods'\n\n    kubernetes_sd_configs:\n    - role: pod\n\n    relabel_configs:\n    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n      action: keep\n      regex: true\n    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n      action: replace\n      target_label: __metrics_path__\n      regex: (.+)\n    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n      action: replace\n      regex: ([^:]+)(?::\\d+)?;(\\d+)\n      replacement: $1:$2\n      target_label: __address__\n    - action: labelmap\n      regex: __meta_kubernetes_pod_label_(.+)\n    - source_labels: [__meta_kubernetes_namespace]\n      action: replace\n      target_label: kubernetes_namespace\n    - source_labels: [__meta_kubernetes_pod_name]\n      action: replace\n      target_label: kubernetes_pod_name\n\n  - job_name: 'kubernetes-cadvisor'\n\n    scheme: https\n\n    tls_config:\n      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n    kubernetes_sd_configs:\n    - role: node\n\n    relabel_configs:\n    - action: labelmap\n      regex: __meta_kubernetes_node_label_(.+)\n    - target_label: __address__\n      replacement: kubernetes.default.svc:443\n    - source_labels: [__meta_kubernetes_node_name]\n      regex: (.+)\n      target_label: __metrics_path__\n      replacement: /api/v1/nodes/1/proxy/metrics/cadvisor\n  \n  - job_name: 'kubernetes-service-endpoints'\n\n    kubernetes_sd_configs:\n    - role: endpoints\n\n    relabel_configs:\n    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n      action: keep\n      regex: true\n    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n      action: replace\n      target_label: __scheme__\n      regex: (https?)\n    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n      action: replace\n      target_label: __metrics_path__\n      regex: (.+)\n    - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n      action: replace\n      target_label: __address__\n      regex: ([^:]+)(?::\\d+)?;(\\d+)\n      replacement: $1:$2\n    - action: labelmap\n      regex: __meta_kubernetes_service_label_(.+)\n    - source_labels: [__meta_kubernetes_namespace]\n      action: replace\n      target_label: kubernetes_namespace\n    - source_labels: [__meta_kubernetes_service_name]\n      action: replace\n      target_label: kubernetes_name,kind=ConfigMap,metadata.labels.name=prometheus-server-conf,metadata.name=prometheus-server-conf,metadata.namespace=prometheus"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests-account"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "api_version": "rbac.authorization.k8s.io/v1beta1",
            "force_new": false,
            "id": "/apis/rbac.authorization.k8s.io/v1beta1/clusterroles/prometheus",
            "ignore_fields": null,
            "kind": "ClusterRole",
            "live_manifest_incluster": "apiVersion=rbac.authorization.k8s.io/v1beta1,kind=ClusterRole,metadata.name=prometheus,rules.#=3,rules.0.apiGroups.#=1,rules.0.apiGroups.0=,rules.0.resources.#=5,rules.0.resources.0=nodes,rules.0.resources.1=nodes/proxy,rules.0.resources.2=services,rules.0.resources.3=endpoints,rules.0.resources.4=pods,rules.0.verbs.#=3,rules.0.verbs.0=get,rules.0.verbs.1=list,rules.0.verbs.2=watch,rules.1.apiGroups.#=1,rules.1.apiGroups.0=extensions,rules.1.resources.#=1,rules.1.resources.0=ingresses,rules.1.verbs.#=3,rules.1.verbs.0=get,rules.1.verbs.1=list,rules.1.verbs.2=watch,rules.2.nonResourceURLs.#=1,rules.2.nonResourceURLs.0=/metrics,rules.2.verbs.#=1,rules.2.verbs.0=get",
            "live_resource_version": "2854",
            "live_uid": "c017a810-3e99-4fdd-860e-196193ff8c37",
            "name": "prometheus",
            "namespace": null,
            "override_namespace": null,
            "resource_version": "2854",
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "c017a810-3e99-4fdd-860e-196193ff8c37",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "#Copyright 2019 Google LLC\n\n#Licensed under the Apache License, Version 2.0 (the \"License\");\n#you may not use this file except in compliance with the License.\n#You may obtain a copy of the License at\n\n#https://www.apache.org/licenses/LICENSE-2.0\n\n#Unless required by applicable law or agreed to in writing, software\n#distributed under the License is distributed on an \"AS IS\" BASIS,\n#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#See the License for the specific language governing permissions and\n#limitations under the License.\n\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRole\nmetadata:\n  name: prometheus\nrules:\n- apiGroups: [\"\"]\n  resources:\n  - nodes\n  - nodes/proxy\n  - services\n  - endpoints\n  - pods\n  verbs: [\"get\", \"list\", \"watch\"]\n- apiGroups:\n  - extensions\n  resources:\n  - ingresses\n  verbs: [\"get\", \"list\", \"watch\"]\n- nonResourceURLs: [\"/metrics\"]\n  verbs: [\"get\"]",
            "yaml_body_parsed": "apiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRole\nmetadata:\n  name: prometheus\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  - nodes/proxy\n  - services\n  - endpoints\n  - pods\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - extensions\n  resources:\n  - ingresses\n  verbs:\n  - get\n  - list\n  - watch\n- nonResourceURLs:\n  - /metrics\n  verbs:\n  - get\n",
            "yaml_incluster": "apiVersion=rbac.authorization.k8s.io/v1beta1,kind=ClusterRole,metadata.name=prometheus,rules.#=3,rules.0.apiGroups.#=1,rules.0.apiGroups.0=,rules.0.resources.#=5,rules.0.resources.0=nodes,rules.0.resources.1=nodes/proxy,rules.0.resources.2=services,rules.0.resources.3=endpoints,rules.0.resources.4=pods,rules.0.verbs.#=3,rules.0.verbs.0=get,rules.0.verbs.1=list,rules.0.verbs.2=watch,rules.1.apiGroups.#=1,rules.1.apiGroups.0=extensions,rules.1.resources.#=1,rules.1.resources.0=ingresses,rules.1.verbs.#=3,rules.1.verbs.0=get,rules.1.verbs.1=list,rules.1.verbs.2=watch,rules.2.nonResourceURLs.#=1,rules.2.nonResourceURLs.0=/metrics,rules.2.verbs.#=1,rules.2.verbs.0=get"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests-account"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "api_version": "rbac.authorization.k8s.io/v1beta1",
            "force_new": false,
            "id": "/apis/rbac.authorization.k8s.io/v1beta1/clusterrolebindings/prometheus",
            "ignore_fields": null,
            "kind": "ClusterRoleBinding",
            "live_manifest_incluster": "apiVersion=rbac.authorization.k8s.io/v1beta1,kind=ClusterRoleBinding,metadata.name=prometheus,roleRef.apiGroup=rbac.authorization.k8s.io,roleRef.kind=ClusterRole,roleRef.name=prometheus,subjects.#=1,subjects.0.kind=ServiceAccount,subjects.0.name=default,subjects.0.namespace=prometheus",
            "live_resource_version": "2855",
            "live_uid": "b59e52f6-0d1d-41a1-9903-75a6bc2289a2",
            "name": "prometheus",
            "namespace": null,
            "override_namespace": null,
            "resource_version": "2855",
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "b59e52f6-0d1d-41a1-9903-75a6bc2289a2",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: prometheus\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus\nsubjects:\n- kind: ServiceAccount\n  name: default\n  namespace: prometheus",
            "yaml_body_parsed": "apiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: prometheus\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus\nsubjects:\n- kind: ServiceAccount\n  name: default\n  namespace: prometheus\n",
            "yaml_incluster": "apiVersion=rbac.authorization.k8s.io/v1beta1,kind=ClusterRoleBinding,metadata.name=prometheus,roleRef.apiGroup=rbac.authorization.k8s.io,roleRef.kind=ClusterRole,roleRef.name=prometheus,subjects.#=1,subjects.0.kind=ServiceAccount,subjects.0.name=default,subjects.0.namespace=prometheus"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests-account"
          ]
        }
      ]
    }
  ]
}
